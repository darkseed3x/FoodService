openapi: 3.0.3
info:
  title: Restaurant
  description: Api is providing the restoraunt service
  version: 0.1.9
  x-backend:
    name: RestaurantApi
paths:
  /menu:
    get:
      tags:
        - FoodOrderService
      operationId: menu
      summary: Returns a list of menu of restoraunt.
      parameters:
        - name: restaurant
          in: query
          schema:
            type: string
      responses:
        200:    # status code
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetResponse'
        400:
          description: badRequest
        500:
          description: serverError
  /allMenu:
    get:
      tags:
        - FoodOrderService
      operationId: allMenu
      summary: Returns a list of menu of all restoraunts.=
      responses:
        200:    # status code
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/AssetResponse'
        400:
          description: badRequest
        500:
          description: serverError
  /listRestaurants:
    get:
      tags:
        - FoodOrderService
      operationId: RestoList
      summary: Returns the list of restoraunt.
      responses:
        200:    # status code
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
        400:
          description: badRequest
        500:
          description: serverError
  /order:
    post:
      tags:
        - FoodOrderService
      operationId: newOrder
      summary: Booking
      parameters:
        - name: restaurant
          in: query
          schema:
            type: string
      requestBody:
        description: Request for add Asset
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        200:    # status code
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOrderResponse'
        400:
          description: badRequest
        500:
          description: serverError
    get:
      tags:
        - FoodOrderService
      operationId: getCommonOrder
      summary: get Order
      parameters:
        - name: orderId
          in: query
          schema:
            type: string
      responses:
        200:    # status code
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        400:
          description: badRequest
        500:
          description: serverError
  /getMenu:
    get:
      tags:
        - Restaurant
      operationId: getMenu
      summary: Returns a list of menu of restoraunt.
      description: ''
      responses:
        200:    # status code
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetResponse'
        400:
          description: badRequest
        500:
          description: serverError
  /getAsset:
    get:
      tags:
        - Restaurant
      operationId: getAsset
      summary: Search by Id
      parameters:
        - name: id
          in: query
          schema:
            type: integer
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'
        400:
          description: badRequest
        500:
          description: serverError
  /addAsset:
    post:
      tags:
        - Restaurant
      operationId: addAsset
      summary: add Asset in base
      requestBody:
        description: Request for add Asset
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddAssetResponse'
        400:
          description: badRequest
        500:
          description: serverError
  /deleteAsset:
    delete:
      tags:
        - Restaurant
      operationId: deleteAsset
      summary: delete Asset in base
      parameters:
        - name: id
          in: query
          schema:
            type: integer
      responses:
        200:
          description: success
        400:
          description: badRequest
        500:
          description: serverError
  /addOrder:
    post:
      tags:
        - Restaurant
      operationId: addOrder
      summary: add Order in base
      requestBody:
        description: Request for add Asset
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOrderResponse'
        400:
          description: badRequest
        500:
          description: serverError
  /getOrder:
    get:
      tags:
        - Restaurant
      operationId: getOrder
      summary: get Order in base
      parameters:
        - name: id
          in: query
          schema:
            type: integer
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        400:
          description: badRequest
        500:
          description: serverError
components:
  schemas:
    Restaurant:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    AddAssetResponse:
      type: object
      properties:
        id:
          type: integer
      required:
        - id
    Asset:
      type: object
      description: Position on menu
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
      required:
        - name
        - discirption
        - price
    AssetResponse:
      type: object
      description: Position on menu
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: number
      required:
        - id
        - name
        - discirption
        - price
    Order:
      type: object
      properties:
        count:
          type: integer
        assestId:
          type: integer
      required:
        - count
        - assestId
    AddOrderResponse:
      type: object
      properties:
        Orderid:
          type: string
      required:
        - Orderid
    OrderRequest:
      type: array
      items:
        $ref: '#/components/schemas/Order'
      required:
        - order
    OrderResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        price:
          type: number
        created:
          type: string
          format: date-time
        order:
          type: array
          items:
            type: object
            properties:
              asset:
                $ref: "#/components/schemas/AssetResponse"
              count:
                type: integer
